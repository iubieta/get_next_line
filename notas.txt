Jueves 04/01:
	
	SEGUIR con "ft_strrchr": Cambiar retorno (ptr -> i)

Viernes 05/01:

	ALGORITMO:

		1.Hay texto leido?
			NO: 
				Start = 0
				Leer

		2.Hay salto de linea en el texto despues de Start?
			SI: 
				End = siguiente \n ()
			NO: 
				Ha acabado el texto?
					SI:
						End = final del texto
					NO:
						Leer
						REPETIR

		3.Line = texto entre start y End
		
		4.Start = end anterior
		
		5.RETURN: line

	SEGUIR CON:
		- Reducir nÂº de funciones (strdup con strjoin y substr)
		- Corregir line_len??
		- Comprobar con flags!!

Lunes 08/01:

	CAMBIOS:
		- Incluir '\0' en line_len para coger caso final tambien
		- Sacar todas las lineas con line_len
	
	DUDAS:
		- Donde utilizar BUFFER_SIZE ?? read_str o buf ??

	SEGUIR CON:
		- DUDAS ^
		- Comprobar con flags!!

Miercoles 10/01:

	CAMBIOS:
		- Agrupar lectura en una funcion (SIN TERMINAR)

	SEGUIR CON:
		- Incluir bucle en la funcion de lectura
		- Extraer el malloc fuera de la funcion
		- Usar 2 variables al llamar a join para no malloc-ear varias veces la misma
		- Ir eliminando lineas de read_str para quitar var:start y usar solo 1 var statica

Sabado 13/01:

	NUEVO ALGORITMO:

		1.Hay texto leido?
			NO: Inicializar texto
			SI: 2.

		2.Leer mientras no haya un salto de linea o se acabe el texto

		3.Line = texto hasta \n o \0

		4.Quitar linea de texto

		5.RETURN: line

	CAMBIOS:
		- gnl separado en funciones
		- modificadas funciones de libft para eliminar libft

	SEGUIR CON:
		- LEAKS: revisar -gnl -substr -join

Lunes 29/01:

	ESTADO:
		- Sin fallos de memoria
		- Fallos de paco

	CAMBIOS:
		Liberar memoria de texto con puntero *del

